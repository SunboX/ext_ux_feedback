{"ts":1342035432662,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\n * Copyright (c) 2012 André Fiedler, <https://twitter.com/sonnenkiste>\n *\n * license: MIT-style license\n */\n\nExt.define('Ux.feedback.FeedbackButton', {\n    extend: 'Ext.Button',\n    \n    alias: 'widget.feedbackButton',\n    \n    remoteUrl  : '',\n    jpegQuality: 0.5, // 0.1 to 1 (1 = 100%)\n    messages   : {\n        title                : 'Give feedback',\n        descriptionWithCanvas: 'With the help of the feedback function, you can send suggestions to this product. We welcome bug reports, suggestions and comments to functions in general. A ScreenShot was automatically created and appended to your feedback <br/> In addition, you can write a short description for your feedback:',\n        description          : 'With the help of the feedback function, you can send suggestions to this product. We welcome bug reports, suggestions and comments to functions in general <br/> your feedback:',\n        loading              : 'Feedback will be sent...',\n        successTitle         : 'Feedback has been sent',\n        successMsg           : 'Thank you for your feedback!',\n        errorTitle           : 'Error'\n    },\n    \n    // private\n    initComponent: function() {\n        var me = this;\n        \n        me.callParent(arguments);\n           \n        // Alway layout as button, even if it´s inside a toolbar\n        me.removeCls('x-toolbar-item');\n        me.removeCls('x-btn-default-toolbar-small');\n        me.addCls('x-btn-default-small');\n\n        me.on('click', me.onClicked);\n    },\n    \n    // private\n    onRender: function() {\n        this.callParent(arguments);\n        \n        // Feedback Button always stays on top (eg. Ext.getBody().mask())\n        this.el.setStyle('z-index', 1000000);\n        \n        /*\n        setInterval(function(){\n            btn.toFront();\n        }, 1000);\n        */\n    },\n\n    // private\n    onClicked: function() {\n        var me = this;\n        \n        // TODO: Add Bandwidth Test (down/upstream speed test)\n        \n        if(me.isCanvasSupported()){\n    \t\t\n\t\t\thtml2canvas( [ document.body ], {\n\t\t\t\tonrendered: function(canvas) {\n\t\t\t\t\tvar c = Ext.get(canvas);\n\n\t\t\t\t\tc.setStyle('position', 'absolute');\n\t\t\t\t\tc.setStyle('left', 0);\n\t\t\t\t\tc.setStyle('top', 0);\n\t\t\t\t\tc.setStyle('z-index', 9999);\n\t\t\n\t\t\t\t\tExt.get(document.body).insertSibling(c);\n\t\t\n\t\t\t\t\tme.showFeedbackWindow(\n\t\t\t\t\t\tme.messages.descriptionWithCanvas,\n\t\t\t\t\t\tcanvas, c\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\t\n        } else {\n            me.showFeedbackWindow(me.messages.description);\n        }\n    },\n    \n    // private\n    isCanvasSupported: function(){\n        var elem = document.createElement('canvas');\n        return !!(elem.getContext && elem.getContext('2d'));\n    },\n    \n    // private\n    showFeedbackWindow: function(msg, canvas, c){\n        var me = this,\n            win = Ext.create('Ux.feedback.FeedbackWindow');\n            \n        win.on('hide', function(){\n            if(c) c.destroy();\n        });\n        win.prompt(me.messages.title, msg, function(btn, text){\n            if (btn == 'ok'){\n                Ext.getBody().mask(me.messages.loading, 'x-mask-loading', false);\n                Ext.Ajax.request({\n                    method: 'POST',\n                    url: me.remoteUrl,\n                    params: {\n                        feedback: text,\n                        screenshot: canvas ? canvas.toDataURL('image/jpeg', me.jpegQuality) : '',\n                        datetime: new Date().toGMTString(),\n                        useragent: navigator.userAgent,\n                        platform: navigator.platform\n                    },\n                    success: function(response){\n                        if(c) c.destroy();\n                        Ext.getBody().unmask();\n                        Ext.Msg.alert({\n                            icon: Ext.Msg.INFO,\n                            title: me.messages.successTitle,\n                            msg: me.messages.successMsg,\n                            buttons: Ext.Msg.OK\n                        });\n                        \n                        me.fireEvent('feedbackSuccess');\n                    },\n                    failure: function(response, opts) {\n                        var obj = Ext.decode(response.responseText);\n                        Ext.getBody().unmask();\n                        if(obj.msg)\n                            Ext.Msg.alert(me.messages.errorTitle, obj.msg);\n                            \n                        me.fireEvent('feedbackFailure');\n                    }\n                });\n            } else {\n                if(c) c.destroy();\n            }\n        }, this, true);\n    }\n});"]],"start1":0,"start2":0,"length1":0,"length2":4623}]],"length":4623}
